package com.auth.ken.authjwt.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.auth.ken.authjwt.converters.CommentConverter;
import com.auth.ken.authjwt.converters.LocalTimeConverter;
import com.auth.ken.authjwt.converters.UserCommentConverter;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAtomicCounter;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Set;
import java.util.concurrent.CopyOnWriteArrayList;


@DynamoDBTable(tableName = "video")
@NoArgsConstructor
@AllArgsConstructor
public class Video {


    private String id;
    private String title;
    private String description;
    private String userId;
    private Long likes=0L;
    private Long dislikes =0L;
    private Set<String> tags;
    private String videourl;
    private VideoStatus status;
    private Long viewCount =0L;
    private String thumbnailurl;
    private List<Comment> commentList = new CopyOnWriteArrayList<>();
    public List<UserCommentInfo> userInfos = new CopyOnWriteArrayList<>();
    private LocalDateTime postedDateAndTime;
    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }
    @DynamoDbAtomicCounter
    public Long getLikes() {
        return likes;
    }

    public void setLikes(Long likes) {
        this.likes = likes;
    }
    @DynamoDbAtomicCounter
    public Long getDislikes() {
        return dislikes;
    }

    public void setDislikes(Long dislikes) {
        this.dislikes = dislikes;
    }
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    public Set<String> getTags() {
        return tags;
    }

    public void setTags(Set<String> tags) {
        this.tags = tags;
    }

    public String getVideourl() {
        return videourl;
    }

    public void setVideourl(String videourl) {
        this.videourl = videourl;
    }
    @DynamoDBTypeConvertedEnum
    public VideoStatus getStatus() {
        return status;
    }

    public void setStatus(VideoStatus status) {
        this.status = status;
    }
    @DynamoDbAtomicCounter
    public Long getViewCount() {
        return viewCount;
    }

    public void setViewCount(Long viewCount) {
        this.viewCount = viewCount;
    }

    public String getThumbnailurl() {
        return thumbnailurl;
    }

    public void setThumbnailurl(String thumbnailurl) {
        this.thumbnailurl = thumbnailurl;
    }
    @DynamoDBTypeConverted(converter = CommentConverter.class)
    public List<Comment> getCommentList() {
        return commentList;
    }

    public void setCommentList(List<Comment> commentList) {
        this.commentList = commentList;
    }
    @DynamoDBAttribute(attributeName = "userinfos")
    @DynamoDBTypeConverted(converter = UserCommentConverter.class)
    public List<UserCommentInfo> getUserInfos() {
        return userInfos;
    }

    public void setUserInfos(List<UserCommentInfo> userInfos) {
        this.userInfos = userInfos;
    }
    @DynamoDBTypeConverted(converter = LocalTimeConverter.class)
    @DynamoDBAttribute(attributeName = "date")
    public LocalDateTime getPostedDateAndTime() {
        return postedDateAndTime;
    }

    public void setPostedDateAndTime(LocalDateTime postedDateAndTime) {
        this.postedDateAndTime = postedDateAndTime;
    }

    public void incrementLikes(){
        likes++;
    }

    public void decrementLikes(){
        likes--;
    }

    public void incrementDislikes(){
        dislikes++;
    }

    public void decrementDislikes(){ dislikes--;
    }

    public void incrementViewCount() {
        viewCount= viewCount+1;
    }

    public void addComment(Comment comment) {
        commentList.add(comment);
    }
    public void addUserInfo(UserCommentInfo userComment) {
        userInfos.add(userComment); }
}
