package com.auth.ken.authjwt.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;


import java.util.List;
import java.util.Set;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentSkipListSet;

//@Document(value = "user")
@DynamoDBTable(tableName = "user")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class User {
    @DynamoDBHashKey(attributeName = "id")
    @DynamoDBAutoGeneratedKey
    private String id;
    @DynamoDBAttribute(attributeName = "firstname")
    private String firstName;
    @DynamoDBAttribute(attributeName = "lastname")
    private String lastName;
    @DynamoDBAttribute
    private String fullname;
    @DynamoDBAttribute
    private String sub;
    @DynamoDBAttribute(attributeName = "emailaddress")
    private String emailAddress;
    @DynamoDBAttribute
    private String name;
    @DynamoDBAttribute
    private String picture;
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    @DynamoDBAttribute(attributeName = "subscribed_to_users")
    private Set<String> subcribedToUsers = ConcurrentHashMap.newKeySet();
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    private Set<String> subscribers = ConcurrentHashMap.newKeySet();
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    @DynamoDBAttribute(attributeName = "videohistory")
    private Set<String> videoHistory = ConcurrentHashMap.newKeySet();
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    @DynamoDBAttribute(attributeName = "likedvideos")
    private Set<String> likedVideos = ConcurrentHashMap.newKeySet();
    @DynamoDBTyped(DynamoDBMapperFieldModel.DynamoDBAttributeType.SS)
    @DynamoDBAttribute(attributeName = "dislikedvideos")
    private Set<String> dislikedVideos = ConcurrentHashMap.newKeySet();

    public void addToLikedVideos(String videoId) {
        likedVideos.add(videoId);
    }

    public void addToDisLikedVideos(String videoId) {
        dislikedVideos.add(videoId);
    }

    public void removeFromLikedVideo(String videoId) {
        likedVideos.remove(videoId);
    }

    public void removeFromDislikedVideo(String videoId) {
        dislikedVideos.remove(videoId);
    }

    public void addVideoToHistory(String videoId) {
       videoHistory.add(videoId);
    }

    public void addSubcribedToUsers(String userId) {
        subcribedToUsers.add(userId);
    }
    public void removeFromSubcribedToUsers(String userId) {
        subcribedToUsers.remove(userId);
    }
    public void addToSubscribers(String userId) {
      subscribers.add(userId);
    }


    public void removeFromSubscribers(String userId) {
        subscribers.remove(userId);
    }
}
